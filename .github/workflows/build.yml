# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: "Build"

on:
  workflow_call:
    inputs:
      os: { type: string, required: true, description: "Name of the OS that jobs run on" }
      go-version: { type: string, required: true, description: "Version of Go" }
  workflow_dispatch:
    inputs:
      os: { type: string, default: 'ubuntu-latest', description: "Name of the OS that jobs run on" }
      go-version: { type: string, default: '1.22', description: "Version of Go" }

jobs:
  build-and-upload:
    name: "Build & Upload"
    runs-on: ${{ inputs.os }}
    strategy:
      matrix:
        job:
          - linux_x64
          - linux_aarch64
          - linux_riscv64
          - linux_mips64le
          - darwin_arm64
          - darwin_x64
          - darwin_universal
          - windows_x64
    steps:
      - name: Checkout code for tag
        if: startsWith(github.ref, 'refs/tags/')
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 1
          fetch-tags: false
      - name: Checkout code for branch
        if: startsWith(github.ref, 'refs/heads/')
        uses: actions/checkout@v4
        with:
          submodules: 'true'
          fetch-depth: 20
          fetch-tags: true

      - name: Setup CIDoer
        uses: i3ash/cidoer@main
        with: { ref: main }

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ inputs.go-version }}

      - name: Prepare
        shell: bash
        run: |
          source cidoer.sh
          do_workflow_job prepare
          echo "ArtifactTag=${ARTIFACT_TAG:-}" >> $GITHUB_ENV

      - name: Run ${{ matrix.job }}
        if: |
          (
          (matrix.job == 'linux_x64'        && startsWith(inputs.os, 'ubuntu')  ) ||
          (matrix.job == 'linux_aarch64'    && startsWith(inputs.os, 'ubuntu')  ) ||
          (matrix.job == 'linux_riscv64'    && startsWith(inputs.os, 'ubuntu')  ) ||
          (matrix.job == 'linux_mips64le'   && startsWith(inputs.os, 'ubuntu')  ) ||
          (matrix.job == 'darwin_arm64'     && startsWith(inputs.os, 'macos')   ) ||
          (matrix.job == 'darwin_x64'       && startsWith(inputs.os, 'macos')   ) ||
          (matrix.job == 'darwin_universal' && startsWith(inputs.os, 'macos')   ) ||
          (matrix.job == 'windows_x64'      && startsWith(inputs.os, 'windows') )  )
        shell: bash
        run: |
          source cidoer.sh
          do_workflow_job test
          do_workflow_job build_${{ matrix.job }}
          echo "ArtifactFilename=${ARTIFACT_FILENAME:-}" >> $GITHUB_ENV

      - name: Upload Artifact
        if: |
          env.ArtifactTag != 'v0' && (
          (matrix.job == 'linux_x64'        && startsWith(inputs.os, 'ubuntu')  ) ||
          (matrix.job == 'linux_aarch64'    && startsWith(inputs.os, 'ubuntu')  ) ||
          (matrix.job == 'linux_riscv64'    && startsWith(inputs.os, 'ubuntu')  ) ||
          (matrix.job == 'linux_mips64le'   && startsWith(inputs.os, 'ubuntu')  ) ||
          (matrix.job == 'darwin_arm64'     && startsWith(inputs.os, 'macos')   ) ||
          (matrix.job == 'darwin_x64'       && startsWith(inputs.os, 'macos')   ) ||
          (matrix.job == 'darwin_universal' && startsWith(inputs.os, 'macos')   ) ||
          (matrix.job == 'windows_x64'      && startsWith(inputs.os, 'windows') )  )
        uses: actions/upload-artifact@v4
        with:
          retention-days: 3
          name: ${{ env.ArtifactFilename }}
          path: ${{ github.workspace }}/${{ env.ArtifactFilename }}
